import {ArticlesService} from "../../common/article.service";
import {CREATE_CATEGORII, FETCH_ARTICLES, FETCH_AUTH_ARTICLES, FETCH_CATEGORII} from "../action.types";
import {FETCH_CATEGORII_END, FETCH_END, FETCH_START} from "../mutations.type";
import {CategoriiService} from "../../common/categorii.service";


const state = {
    posts: [],
    isLoading: true,
    postsCount: 0,
    categorii:[]
};
const getters = {
    postsCount(state) {
        return state.postsCount;
    },
    posts(state) {
        return state.posts
    },
    isLoading(state) {
        return state.isLoading;
    },
    categorii(state) {
        return state.categorii.map(item =>
            ({value: item.id, text: item.nume})
        );
    },
};
const actions = {
    [FETCH_ARTICLES]({ commit }) {
        commit(FETCH_START);
        return ArticlesService.query()
            .then(({ data }) => {
                commit(FETCH_END, data);
            })
            .catch(error => {
                throw new Error(error);
            });
    },
    [FETCH_AUTH_ARTICLES]({ commit }) {
        commit(FETCH_START);
        return ArticlesService.queryAuth()
            .then(({ data }) => {
                commit(FETCH_END, data);
            })
            .catch(error => {
                throw new Error(error);
            });
    },
    [FETCH_CATEGORII]({ commit }) {
        commit(FETCH_START);
        return CategoriiService.query()
            .then(({ data }) => {
                commit(FETCH_CATEGORII_END, data);
            })
            .catch(error => {
                throw new Error(error);
            });
    },
    [CREATE_CATEGORII]({ commit },payload) {
        commit(FETCH_START);
        return CategoriiService.create(payload)
    },


};
const mutations = {
    [FETCH_START](state) {
        state.isLoading = true;
    },
    [FETCH_END](state, { data, total }) {
        state.posts = data;
        state.postsCount = total;
        state.isLoading = false;
    },
    [FETCH_CATEGORII_END](state,data) {
        state.categorii =data.categorii;
        state.isLoading = false;
    }
};
export default {
    actions,
    mutations,
    state,
    getters
}
